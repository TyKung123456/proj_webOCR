#!/usr/bin/env bash
set -e

# ‡πÉ‡∏ä‡πâ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å compose (‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ñ‡∏∑‡∏≠ /app ‡∏´‡∏£‡∏∑‡∏≠ /app/server /app/client)
cd "${WORKDIR:-/app}"

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏à‡∏≤‡∏Å lockfile
PKG="npm"
if [ -f "pnpm-lock.yaml" ]; then
  PKG="pnpm"
elif [ -f "yarn.lock" ]; then
  PKG="yarn"
elif [ -f "package-lock.json" ]; then
  PKG="npm"
fi

install_if_needed () {
  if [ ! -d "node_modules" ] || [ -z "$(ls -A node_modules 2>/dev/null)" ]; then
    echo "üîß Installing dependencies in $(pwd) with ${PKG}..."
    case "$PKG" in
      pnpm) corepack enable && corepack prepare pnpm@latest --activate && pnpm install ;;
      yarn) corepack enable && corepack prepare yarn@stable --activate && yarn install ;;
      npm)  npm install ;;
    esac
  else
    echo "‚úÖ node_modules already present in $(pwd)"
  fi
}

# ‡πÇ‡∏´‡∏°‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå:
# 1) root ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (‡∏°‡∏µ package.json ‡∏ó‡∏µ‡πà /app)
# 2) ‡πÅ‡∏¢‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå /app/server ‡πÅ‡∏•‡∏∞ /app/client (‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ package.json)
if [ -f "package.json" ]; then
  install_if_needed
elif [ -d "server" ] && [ -f "server/package.json" ]; then
  (cd server && install_if_needed)
fi
if [ -d "client" ] && [ -f "client/package.json" ]; then
  (cd client && install_if_needed)
fi

echo "üöÄ Starting command: $*"
exec "$@"
