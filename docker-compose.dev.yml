version: '3.8'

networks:
  ocr_dev_network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  uploads_dev_data:
    driver: local
  ollama_dev_data:
    driver: local

services:
  postgres:
    image: postgres:15-alpine
    container_name: ocr_frontend_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: P@ssw0rd
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - ocr_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d n8n -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ocr_frontend_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      API_PREFIX: /api
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: n8n
      DB_USER: admin
      DB_PASSWORD: P@ssw0rd
      UPLOAD_DIR: uploads
      MAX_FILE_SIZE: 52428800
      ALLOWED_FILE_TYPES: pdf,jpg,jpeg,png
      MAX_FILES_PER_UPLOAD: 1000
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3001:3001"
      - "9229:9229"
    volumes:
      - .:/app
      - /app/node_modules
      - uploads_dev_data:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ocr_dev_network
    command: npm run dev-server

  ollama:
    image: ollama/ollama:latest
    container_name: ocr_ollama_dev
    restart: unless-stopped
    ports:
      - "7869:11434"
    volumes:
      - ollama_dev_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - ocr_dev_network
    profiles: ["ai"]
    healthcheck:
      test: ["CMD", "bash", "-lc", "curl -sf http://localhost:11434/api/tags >/dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ocr_frontend_ui_dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_AI_PROVIDER: mock
      VITE_LOCAL_AI_URL: http://localhost:7869
      VITE_LOCAL_MODEL: qwen3:0.6b
      VITE_ENABLE_AI_CHAT: "true"
      VITE_ENABLE_FILE_ANALYSIS: "true"
      VITE_DEBUG_AI: "true"
      CHOKIDAR_USEPOLLING: "true"
      HMR_PORT: 5173
      HOST: 0.0.0.0
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ocr_dev_network
    command: sh -c "npm run dev -- --host 0.0.0.0 --port 5173"
